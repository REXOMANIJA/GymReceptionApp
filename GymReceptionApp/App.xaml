<!-- FILE: App.xaml -->
<Application x:Class="GymReceptionApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GymReceptionApp"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Yellow.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- Core Brand Colors -->
            <Color x:Key="GymGoldColor">#FFD700</Color>
            <SolidColorBrush x:Key="GymGoldBrush" Color="{StaticResource GymGoldColor}"/>
            <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="#1E1E1E"/>
            <!-- Dark background -->
            <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="#2C2C2C"/>
            <!-- Lighter dark background -->
            <SolidColorBrush x:Key="BorderBrush" Color="#555555"/>
            <SolidColorBrush x:Key="PrimaryTextBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="SecondaryTextBrush" Color="#A0A0A0"/>
            <SolidColorBrush x:Key="MahApps.Brushes.Accent" Color="{StaticResource GymGoldColor}"/>
            <SolidColorBrush x:Key="MahApps.Brushes.ThemeForeground" Color="White" />

            <!-- Color of the button background when you HOVER over MINIMIZE and MAXIMIZE -->
            <SolidColorBrush x:Key="MahApps.Brushes.Window.Button.Background.MouseOver" Color="#444444" />

            <!-- Color of the button background when you HOVER over the CLOSE (X) button -->
            <SolidColorBrush x:Key="MahApps.Brushes.Window.CloseButton.Background.MouseOver" Color="#E81123" />

            <!-- Color of the symbol when you HOVER over the CLOSE (X) button (usually white) -->
            <SolidColorBrush x:Key="MahApps.Brushes.Window.CloseButton.Foreground.MouseOver" Color="White" />

            <!-- Background color when you PRESS any of the buttons -->
            <SolidColorBrush x:Key="MahApps.Brushes.Window.Button.Background.Pressed" Color="#666666" />

            <!-- Background color when you PRESS the CLOSE (X) button -->
            <SolidColorBrush x:Key="MahApps.Brushes.Window.CloseButton.Background.Pressed" Color="#B10F1E" />
            <!-- Global Style for All Windows -->
            <Style TargetType="{x:Type mah:MetroWindow}">
                <!-- Set all the window properties directly in the style -->
                <Setter Property="WindowTitleBrush" Value="{DynamicResource MahApps.Brushes.Window.Background}" />
                <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource MahApps.Brushes.Window.Background}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="GlowBrush" Value="{StaticResource GymGoldBrush}" />
                <Setter Property="ResizeBorderThickness" Value="20" />
                <Setter Property="TitleForeground" Value="{StaticResource PrimaryTextBrush}" />
                <Setter Property="TitleCharacterCasing" Value="Normal" />

                <!-- Override the entire template to apply rounded corners -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type mah:MetroWindow}">
                            <!-- 1. The main border now has a CornerRadius -->
                            <Border x:Name="PART_RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                                <!-- 2. The main grid must clip its content to the rounded corners -->
                                <Grid x:Name="PART_MainGrid" ClipToBounds="True">
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                    <mah:WindowButtonCommands Grid.Column="1"
                                                  Style="{DynamicResource MahApps.Styles.WindowButtonCommands.Win10}"
                                                  Theme="{DynamicResource MahApps.Themes.WindowButtonCommands.Win10}" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Custom ScrollBar Style -->
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBackgroundBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Width="8">
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle x:Name="Thumb" Fill="{StaticResource GymGoldBrush}" RadiusX="4" RadiusY="4" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- App-wide Control Styles -->
            <Style TargetType="TextBox" x:Key="SearchBoxStyle" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="CaretBrush" Value="{StaticResource GymGoldBrush}"/>
                <Setter Property="mah:TextBoxHelper.Watermark" Value="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" />
                <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True"/>
                <Setter Property="mah:TextBoxHelper.UseFloatingWatermark" Value="False"/>
            </Style>

            <Style x:Key="AccentButton" TargetType="Button">
                <!-- Basic Properties -->
                <Setter Property="Background" Value="{StaticResource GymGoldBrush}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Padding" Value="15,8" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="BorderThickness" Value="0" />

                <!-- Template for Custom Look and Feel -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <!-- Main border with rounded corners -->
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                                <!-- The text content of the button -->
                                <ContentPresenter x:Name="contentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <!-- Triggers for hover, pressed, and disabled states -->
                            <ControlTemplate.Triggers>
                                <!-- Mouse Hover Effect: Slightly lighter background -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FFE7B4" />
                                </Trigger>
                                <!-- Mouse Pressed Effect: Slightly darker background -->
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#E5C100" />
                                </Trigger>
                                <!-- Disabled State: Grayed out -->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#555555" />
                                    <Setter Property="Foreground" Value="#AAAAAA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SecondaryButton" TargetType="Button">
                <!-- Basic Properties -->
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Padding" Value="15,8" />
                <Setter Property="Cursor" Value="Hand" />

                <!-- Template for Custom Look and Feel -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <!-- Main border with rounded corners -->
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                                <!-- The text content of the button -->
                                <ContentPresenter x:Name="contentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <!-- Triggers for hover and pressed states -->
                            <ControlTemplate.Triggers>
                                <!-- Mouse Hover Effect: Uses the gold border color -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#333333" />
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
                                </Trigger>
                                <!-- Mouse Pressed Effect: Slightly darker background -->
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#444444" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>